const request = require('request');
const cheerio = require('cheerio');
const Entities = require('html-entities').AllHtmlEntities;

const entities = new Entities();

module.exports = function getInfoWithId(id) {
  return new Promise((resolve, reject) => {
    request(`https://www.youtube.com/watch?v=${id}`, (error, response, body) => {
      if (error) {
        reject(new Error('Request error'));
        return;
      }

      var $ = cheerio.load(body);

      if ($('meta[itemprop=name]').length <= 0 &&
          $('meta[itemprop=description]').length <= 0 &&
          $('meta[itemprop=datePublished]').length <= 0 &&
          $('meta[itemprop=interactionCount]').length <= 0 &&
          $('meta[itemprop=regionsAllowed]').length <= 0 &&
          $('p#eow-description').length <= 0 &&
          $('span[itemprop=author] link[itemprop=url]').length <= 0) {
        reject(new Error('Video doesn\'t exist or request error'));
        return;
      }

      let videoTitle = entities.decode($('meta[itemprop=name]').attr('content'));

      let videoAuthorURL = $('span[itemprop=author] link[itemprop=url]').attr('href').split('/');
      let videoAuthor = videoAuthorURL[videoAuthorURL.length - 1];

      let videoDate = $('meta[itemprop=datePublished]').attr('content');

      let videoViews = $('meta[itemprop=interactionCount]').attr('content');

      let videoRegionsAllowed = $('meta[itemprop=regionsAllowed]').attr('content').split(',');

      let videoBeginDescription = entities.decode($('meta[name=description]').attr('content'));

      let descEncoded = $('p#eow-description').html().replace(/<br(?:.)*?>/g, '\n').replace(/<(?:.)*?>/gm, '');
      let videoDescription = entities.decode(descEncoded);

      resolve({
        title: videoTitle,
        author: videoAuthor,
        date: videoDate,
        views: videoViews,
        regionsAllowed: videoRegionsAllowed,
        beginDesc: videoBeginDescription,
        description: videoDescription,
      });
    });
  });
};

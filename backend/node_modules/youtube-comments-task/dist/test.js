'use strict';

var Task = require('data.task');
var fetchComments = require('./index');
var fetchReplies = require('./lib/fetch-replies');

var fetchAllComments = function fetchAllComments(videoId, pageToken) {
  var fetched = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
  return fetchComments(videoId, pageToken).chain(function (_ref) {
    var comments = _ref.comments,
        nextPageToken = _ref.nextPageToken;
    return nextPageToken ? fetchAllComments(videoId, nextPageToken, fetched.concat(comments)) : Task.of(fetched.concat(comments));
  });
};

fetchAllComments('ygeAeeR8NOc').fork(function (e) {
  return console.error('ERROR', e);
}, function (allComments) {
  return allComments.filter(function (c) {
    return c.hasReplies;
  }).map(function (c) {
    console.log(c.author, c.numReplies);
    console.log(c.text);
    c.replies.map(function (r) {
      return console.log('  ', r.text);
    });
    console.log('\n\n\n----\n\n\n');
  });
});

// const repliesToken = 'EiYSC3lnZUFlZVI4Tk9jwAEAyAEA4AEBogINKP___________wFAABgGMoQCCrABR0FJeVhnbzhJTkRjX01HaDdkNENNakVRbi16VjA0bTQzZ0lZX19fX19fX19fXzlfSUFFb0JUQUtPaFk0YmtGWGVWVk5WVXRRZWpodVFrcHljRzgwVDFCR0VoNElCUklhVldkM2JtWm9YMlYzVTFSYWMydG9USGw0UWpSQllVRkNRV2M2SUFnQkVodzFPbFZuZDI1bWFGOWxkMU5VV25OcmFFeDVlRUkwUVdGQlFrRm4aTRIaVWd3bmZoX2V3U1Rac2toTHl4QjRBYUFCQWciAggAKhhVQ0ZxY05JME5hQUEyMU5TOVczRXhDUmcyC3lnZUFlZVI4Tk9jOABAAUgKKAo%253D'

// const videoId = 'ygeAeeR8NOc'
// const comment = { repliesToken }

// fetchReplies(videoId, comment)
//   .fork(e => console.error(e),
//         x => console.log(x))